{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/chatStore.js","../../src/components/Chat.svelte","../../src/utils/utils.js","../../src/components/HistoryViewer.svelte","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../src/components/TestStatistics.svelte","../../node_modules/chart.js/auto/auto.js","../../src/components/TestViewer.svelte","../../src/components/TestForm.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from \"svelte/store\";\n\nexport const chatHistory = writable([]);\nexport const currentChatId = writable(null);\nexport const testTypes = writable([]);","<script>\n  import { generateUUID } from \"../utils/utils\";\n  import { chatHistory, currentChatId } from \"../stores/chatStore\";\n\n  let chatId;\n  let text = \"\";\n  let isSubmitting = false;\n\n  async function sendRequest(event) {\n    if (!chatId) {\n      chatId = generateUUID();\n      $currentChatId = chatId;\n    }\n\n    event.preventDefault();\n    if (isSubmitting) return;\n\n    isSubmitting = true;\n\n    try {\n      $chatHistory = [...$chatHistory, { sender: \"user\", message: text }];\n      const response = await fetch(\"/request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text: text, chatId: chatId }),\n      });\n\n      if (!response.ok) {\n        alert(\"Es ist ein Fehler aufgetreten\");\n        throw new Error(\"Error\");\n      }\n      text = \"\";\n      const responseData = await response.json();\n      $chatHistory = [\n        ...$chatHistory,\n        { sender: \"bot\", message: responseData },\n      ];\n      console.log(chatHistory);\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n    } finally {\n      isSubmitting = false;\n      text = \"\";\n    }\n\n    console.log($chatHistory);\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      event.preventDefault();\n      sendRequest(event);\n    }\n  }\n</script>\n\n<div id=\"chatContainer\">\n  <div id=\"chatHistory\">\n    {#each $chatHistory as { sender, message }}\n      <div class={sender === \"user\" ? \"userMessage\" : \"botMessage\"}>\n        {message}\n      </div>\n    {/each}\n  </div>\n\n  <div class=\"inputContainer\">\n    <form on:submit={sendRequest} class=\"inputWrapper\">\n      <textarea\n        bind:value={text}\n        placeholder=\"Type your message here\"\n        on:keydown={handleKeyDown}\n      ></textarea>\n      <button type=\"submit\" disabled={isSubmitting}>Send</button>\n    </form>\n  </div>\n</div>\n\n<style>\n  #chatContainer {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n\n  #chatHistory {\n    overflow-y: auto;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    border-radius: 10px;\n    flex-grow: 1;\n  }\n\n  .userMessage {\n    background-color: #a8e6cf;\n    padding: 10px;\n    border-radius: 10px;\n    margin: 5px 5px;\n    text-align: left;\n    align-self: flex-end;\n    max-width: 60%;\n    margin-left: auto;\n    min-width: none;\n  }\n\n  .botMessage {\n    background-color: #cfd8dc; /* More grey for bot messages */\n    padding: 10px;\n    border-radius: 10px;\n    margin: 5px 0 0 5px;\n    text-align: left;\n    white-space: pre-line;\n    align-self: flex-start;\n    max-width: 60%;\n  }\n\n  .inputWrapper {\n    margin-top: 10px;\n    display: flex;\n    gap: 5px;\n  }\n\n  textarea {\n    height: 50px;\n    resize: none;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    padding: 10px;\n    flex: 1;\n  }\n\n  button {\n    width: 80px;\n    height: 50px;\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 0 15px;\n    align-items: center;\n  }\n\n  button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n</style>\n","export function generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();//Timestamp\n    var d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16;//random number between 0 and 16\n        if(d > 0){//Use timestamp until depleted\n            r = (d + r)%16 | 0;\n            d = Math.floor(d/16);\n        } else {//Use microseconds since page-load if supported\n            r = (d2 + r)%16 | 0;\n            d2 = Math.floor(d2/16);\n        }\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}","<script>\n  import { onMount } from \"svelte\";\n  import { chatHistory, currentChatId } from \"../stores/chatStore\";\n\n  let chatHistories = [];\n\n  onMount(async () => {\n    await getHistories();\n  });\n\n  async function getHistories() {\n    try {\n      const response = await fetch(\"/history\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        alert(\"Es ist ein Fehler aufgetreten\");\n        throw new Error(\"Error\");\n      }\n\n      const responseData = await response.json();\n      chatHistories = responseData; // Save response data to chatHistories\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n    }\n  }\n\n  function handleChatChange(event) {\n    const selectedChatId = event.target.value;\n\n    chatHistory.update((current) => {\n      console.log(current);\n      // Initialize an empty array to clear the existing chat history\n      current = [];\n\n      if (selectedChatId) {\n        currentChatId.set(selectedChatId);\n\n        const selectedChat = chatHistories.find(\n          (chat) => chat.chat_id === selectedChatId\n        );\n        console.log(selectedChat);\n\n        // Transform the selected chat's messages to the desired structure\n        const transformedMessages = selectedChat.messages.map((msg) => ({\n          sender: msg.role, // 'role' can be 'user' or 'bot'\n          message: msg.message,\n        }));\n\n        // Set the transformed messages as the new chat history\n        current.push(...transformedMessages);\n      } else {\n        currentChatId.set(null);\n      }\n\n      return current;\n    });\n  }\n</script>\n\n<div>\n  History:\n  <select on:change={handleChatChange}>\n    <option value=\"\">new Chat</option>\n    {#each chatHistories as history}\n      <option value={history.chat_id}>{history.chat_id}</option>\n    {/each}\n  </select>\n</div>\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\n  import { onMount } from \"svelte\";\n  import Chart from \"chart.js/auto\";\n\n  export let type;\n\n  let chartCanvas;\n  let chartInstance;\n\n  async function loadTestResults() {\n    const response = await fetch(`/test/run/${type}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      console.log(result);\n      generateHistogram(result);\n    } else {\n      console.error(\"Failed to get test results:\", response.status);\n    }\n  }\n\n  function generateHistogram(data) {\n    // Sort data by date (timestamp) in ascending order\n    data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n    // Prepare data for the chart\n    const labels = data.map(\n      (run) => new Date(run.timestamp).toLocaleString() // Include date and time\n    );\n    const successfulTests = data.map(\n      (run) => run.results.filter((result) => result.success).length\n    );\n    const failedTests = data.map(\n      (run) => run.results.filter((result) => !result.success).length\n    );\n\n    // Destroy the previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n\n    // Create a new Chart.js instance\n    chartInstance = new Chart(chartCanvas, {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Failed Tests\",\n            data: failedTests,\n            backgroundColor: \"gray\",\n          },\n          {\n            label: \"Successful Tests\",\n            data: successfulTests,\n            backgroundColor: \"green\",\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n          },\n        },\n        scales: {\n          x: {\n            stacked: true, // Enable stacking for x-axis\n            title: {\n              display: true,\n              text: \"Date and Time\",\n            },\n          },\n          y: {\n            stacked: true, // Enable stacking for y-axis\n            title: {\n              display: true,\n              text: \"Number of Tests\",\n            },\n          },\n        },\n      },\n    });\n  }\n\n  $: if (type) {\n    loadTestResults();\n  }\n\n  onMount(() => {\n    loadTestResults();\n  });\n</script>\n\n<details>\n  <summary>Statistic</summary>\n  <h1>Statistics for {type}</h1>\n  <canvas bind:this={chartCanvas}></canvas>\n</details>\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","<script>\n  import { onMount } from \"svelte\";\n  import { testTypes } from \"../stores/chatStore\";\n  import TestStatistics from \"./TestStatistics.svelte\";\n\n  let data = [];\n  let results = {};\n  let type;\n  let testsRunning = false;\n\n  async function loadTestTypes() {\n    const response = await fetch(`/test/type`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      $testTypes = [];\n      result.forEach((type) => {\n        $testTypes.push(type.name);\n      });\n      console.log($testTypes);\n    } else {\n      console.error(\"Failed to get types:\", response.status);\n    }\n  }\n\n  async function loadTests() {\n    try {\n      const response = await fetch(\"/test\");\n      if (response.ok) {\n        data = await response.json();\n        console.log(data);\n      } else {\n        console.error(\"Failed to fetch data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n\n  export function reload() {\n    loadTests();\n  }\n\n  async function runAllTests() {\n    runTestByType();\n  }\n\n  async function runTestByType() {\n    testsRunning = true;\n    try {\n      const response = await fetch(`/test/type/run/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const testResults = await response.json();\n        console.log(testResults);\n        testResults.forEach((result) => {\n          results[result.id] = {\n            success: result.success,\n            actual: result.actual,\n          };\n        });\n\n        console.log(results);\n      } else {\n        console.error(\"Failed to run test:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    testsRunning = false;\n  }\n\n  async function runTest(id) {\n    try {\n      const response = await fetch(`/test/run/${id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        results[id] = { success: result.success, actual: result.actual };\n      } else {\n        console.error(\"Failed to run test:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n\n  function changeSelection() {}\n\n  onMount(() => {\n    loadTests();\n    loadTestTypes();\n  });\n</script>\n\n<select id=\"type\" name=\"type\" bind:value={type} on:change={changeSelection}>\n  <option selected value=\"all\">All</option>\n  {#if $testTypes && $testTypes.length > 0}\n    {#each $testTypes as type}\n      <option value={type}>{type}</option>\n    {/each}\n  {:else}\n    <option disabled value=\"\">Loading test types...</option>\n  {/if}\n</select>\n\n{#if type !== \"all\"}\n  <button on:click={runAllTests} disabled={testsRunning}>Run all tests</button>\n{/if}\n\n<TestStatistics {type} />\n\n{#if data.length > 0}\n  <div class=\"grid-container\">\n    {#each data as item}\n      {#if item.type === type || type === \"all\"}\n        <details\n          class=\"grid-item {results[item._id]?.success === true\n            ? 'result-true'\n            : results[item._id]?.success === false\n              ? 'result-false'\n              : ''}\"\n        >\n          <summary>\n            <div>\n              <strong>{item.name}</strong>\n              {#if results[item._id]?.success === true}\n                <span class=\"status-pass\">Passed</span>\n              {:else if results[item._id]?.success === false}\n                <span class=\"status-fail\">Failed</span>\n              {:else}\n                <span class=\"status-pending\">Not run yet</span>\n              {/if}\n              <button class=\"run-button\" on:click={() => runTest(item._id)}\n                >Run Test</button\n              >\n            </div>\n            {#if results[item._id]?.actual}\n              <div>\n                <p><strong>Actual:</strong> {results[item._id]?.actual}</p>\n              </div>\n            {/if}\n          </summary>\n          <div class=\"details-content\">\n            <p><strong>Question:</strong> {item.question}</p>\n            <p><strong>Expected Answer:</strong> {item.expected}</p>\n            <p><strong>Type:</strong> {item.type}</p>\n            {#if item.result}\n              <details>\n                <summary>Previous Results</summary>\n                <div class=\"previous-results\">\n                  {#each item.result as result}\n                    <details\n                      class=\"grid-item {result.success === true\n                        ? 'result-true'\n                        : result.success === false\n                          ? 'result-false'\n                          : ''}\"\n                    >\n                      <summary\n                        ><strong>Run:</strong>\n                        {new Date(result.timestamp).toLocaleString()}</summary\n                      >\n                      <div class=\"previous-result\">\n                        <p><strong>Actual:</strong> {result.actual}</p>\n                        <p>\n                          <strong>Success:</strong>\n                          {result.success ? \"Yes\" : \"No\"}\n                        </p>\n                      </div>\n                    </details>\n                  {/each}\n                </div>\n              </details>\n            {/if}\n          </div>\n        </details>\n      {/if}\n    {/each}\n  </div>\n{:else}\n  <p>Loading data...</p>\n{/if}\n\n<style>\n  .grid-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    width: 100%;\n  }\n\n  .grid-item {\n    display: flex;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: #f9f9f9;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n  }\n\n  summary {\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .run-button {\n    margin-left: 16px;\n  }\n\n  .details-content {\n    padding: 0 16px 16px 16px;\n  }\n\n  .result-true > summary {\n    background-color: #d4f8d4;\n  }\n\n  .result-false > summary {\n    background-color: #f8d4d4;\n  }\n\n  .status-pass {\n    color: green;\n    font-weight: bold;\n  }\n\n  .status-fail {\n    color: red;\n    font-weight: bold;\n  }\n\n  .status-pending {\n    color: gray;\n    font-weight: bold;\n  }\n\n  .previous-results {\n    margin-top: 16px;\n  }\n\n  .previous-result {\n    border-top: 1px solid #ccc;\n    padding-top: 8px;\n  }\n\n  button {\n    margin-top: 16px;\n  }\n\n  summary {\n    display: block;\n    padding: 1em;\n    border: 1px solid #ddd;\n    margin-bottom: 1em;\n  }\n\n  summary > div {\n    display: flex;\n    align-items: center;\n    gap: 1em;\n  }\n</style>\n","<script>\n  import { testTypes } from \"../stores/chatStore\";\n  import TestViewer from \"./TestViewer.svelte\";\n\n  let name = \"\";\n  let question = \"\";\n  let expected = \"\";\n  let type = \"\";\n  let testViewerRef;\n  let newTestType = \"\";\n\n  async function submitTestType(event) {\n    event.preventDefault();\n\n    const formData = {\n      name: newTestType,\n    };\n\n    const response = await fetch(\"/test/type\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      console.log(\"Form submitted successfully:\", result);\n\n      testTypes.set([...$testTypes, newTestType]);\n\n      newTestType = \"\";\n\n      testViewerRef.reload();\n    } else {\n      console.error(\"Failed to submit form:\", response.status);\n    }\n  }\n\n  async function submitForm(event) {\n    event.preventDefault();\n\n    const formData = {\n      name,\n      question,\n      expected,\n      type,\n    };\n\n    try {\n      const response = await fetch(\"/test/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"Form submitted successfully:\", result);\n\n        // Clear the form fields\n        name = \"\";\n        question = \"\";\n        expected = \"\";\n        type = \"IntegrationTest\";\n\n        // Reload TestViewer\n        testViewerRef.reload();\n      } else {\n        console.error(\"Failed to submit form:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n</script>\n\n<div class=\"form-container\">\n  <details>\n    <summary>Add Test Type</summary>\n\n    <form on:submit={submitTestType}>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" bind:value={newTestType} />\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  </details>\n  <details>\n    <summary>Add Test</summary>\n\n    <form on:submit={submitForm}>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" bind:value={name} />\n\n      <label for=\"question\">Question:</label>\n      <input type=\"text\" id=\"question\" name=\"question\" bind:value={question} />\n\n      <label for=\"expected\">Expected Answer:</label>\n      <input type=\"text\" id=\"expected\" name=\"expected\" bind:value={expected} />\n\n      <label for=\"type\">Type:</label>\n      <select id=\"type\" name=\"type\" bind:value={type}>\n        {#if $testTypes && $testTypes.length > 0}\n          {#each $testTypes as type}\n            <option value={type}>{type}</option>\n          {/each}\n        {:else}\n          <option disabled value=\"\">Loading test types...</option>\n        {/if}\n      </select>\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  </details>\n\n  <TestViewer bind:this={testViewerRef} />\n</div>\n\n<style>\n  .form-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 80%;\n    margin: 0 auto;\n    padding: 2em;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n  }\n\n  details {\n    width: 100%;\n  }\n\n  summary {\n    cursor: pointer;\n    font-weight: bold;\n    margin-bottom: 1em;\n  }\n\n  form {\n    width: 100%;\n  }\n\n  label {\n    display: block;\n    margin-bottom: 0.5em;\n    font-weight: bold;\n  }\n\n  input[type=\"text\"],\n  select {\n    display: block;\n    width: 100%;\n    margin-bottom: 1em;\n    padding: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n\n  input[type=\"submit\"] {\n    width: 100%;\n    padding: 0.75em;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  input[type=\"submit\"]:hover {\n    background-color: #0056b3;\n  }\n</style>\n","<!-- App.svelte -->\n<script>\n  import Chat from \"./components/Chat.svelte\";\n  import HistoryViewer from \"./components/HistoryViewer.svelte\";\n  import TestForm from \"./components/TestForm.svelte\";\n\n  let currentPage = \"chat\";\n\n  function navigate(page) {\n    currentPage = page;\n  }\n</script>\n\n<div class=\"container\">\n  <div class=\"navbar\">\n    <nav>\n      <h1>Munot DSP Projekt</h1>\n      <div>\n        <a on:click={() => navigate(\"chat\")}>Chat</a>\n        <a on:click={() => navigate(\"tests\")}>Tests</a>\n      </div>\n      <HistoryViewer />\n    </nav>\n  </div>\n  <div class=\"content\">\n    {#if currentPage === \"chat\"}\n      <Chat />\n    {/if}\n\n    {#if currentPage === \"tests\"}\n      <TestForm />\n    {/if}\n  </div>\n</div>\n\n<style>\n  .container {\n    display: grid;\n    grid-template-rows: 100px 1fr;\n    height: 98vh;\n    overflow: scroll;\n  }\n\n  nav {\n    background-color: #0056b3;\n  }\n\n  .navbar {\n    grid-row: 1;\n  }\n\n  .navbar h1 {\n    color: #ffffff;\n    margin: 0;\n  }\n\n  .navbar div {\n    display: flex;\n    gap: 10px;\n  }\n\n  .navbar a {\n    color: #ffffff;\n    text-decoration: none;\n    padding: 0.5em 1em;\n    background-color: #003875;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n  }\n\n  .navbar a:hover {\n    background-color: #00264d;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","chatHistory","currentChatId","testTypes","div","div_class_value","t0","t0_value","div2","div0","div1","form","textarea","button","chatId","isSubmitting","async","sendRequest","d2","Date","getTime","performance","now","replace","Math","random","floor","toString","$currentChatId","preventDefault","$$invalidate","$chatHistory","sender","message","response","fetch","method","headers","body","JSON","stringify","ok","alert","responseData","json","console","log","error","key","shiftKey","t_value","chat_id","option_value_value","t","chatHistories","getHistories","selectedChatId","current","selectedChat","find","chat","transformedMessages","messages","msg","role","round","v","lim","h","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","nk","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","details","summary","chartCanvas","chartInstance","loadTestResults","timestamp","toLocaleString","successfulTests","results","success","failedTests","generateHistogram","status","$$value","t8_value","question","t12_value","expected","t16_value","_id","create_if_block_4","create_if_block_5","if_block1","actual","create_if_block_3","if_block2","create_if_block_2","details_class_value","strong0","strong1","strong2","strong3","t8","t12","t16","t2_value","strong","t2","each_value_1","t6_value","t10_value","t6","t10","if_block","create_if_block_1","create_if_block_7","create_if_block_6","create_if_block","changeSelection","testsRunning","loadTests","runTest","$testTypes","loadTestTypes","testResults","runTestByType","details0","summary0","form0","label0","input0","input1","details1","summary1","form1","label1","input2","label2","input3","label3","input4","label4","input5","testViewerRef","newTestType","formData","reload","if_block0","div3","nav","currentPage","navigate","page"],"mappings":"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","x_google_ignoreList":[0,1,6,7,8,10]}